---
- name: Unlink fish function file
  file:
    path: "{{ ansible_env.HOME }}/.config/fish/functions/{{ item }}"
    state: absent
  loop: "{{ fish_function }}"

- name: Unlink starship config file
  file:
    path: "{{ ansible_env.HOME }}/.config/starship.toml"
    state: absent

- name: Create fish config directory
  file:
    path: "{{ ansible_env.HOME }}/.config/fish/functions"
    state: directory

- name: Install fisher
  get_url:
    url: "https://raw.githubusercontent.com/jorgebucaran/fisher/main/functions/fisher.fish"
    dest: "{{ ansible_env.HOME }}/.config/fish/functions/fisher.fish"
    validate_certs: no

- name: Install plugins
  shell: >
    fish -c "fisher install {{ item }}"
  loop:
    - jethrokuan/fzf
    - jethrokuan/z
    - evanlucas/fish-kubectl-completions

- name: Set fish functions
  file:
    src: "{{ ansible_env.HOME }}/dotfiles/roles/shell/files/functions/{{ item }}"
    path: "{{ ansible_env.HOME }}/.config/fish/functions/{{ item }}"
    state: link
    force: yes
  loop: "{{ fish_function }}"

- name: Set starship config
  file:
    src: "{{ ansible_env.HOME }}/dotfiles/roles/shell/files/starship.toml"
    path: ~/.config/starship.toml
    state: link
    force: yes

- name: Set fish config files
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    force: yes
  loop: "{{ fish_config }}"

- name: Search shell path
  shell: >
    /usr/bin/which {{ SHELL }}
  register: shell_path
  ignore_errors: True

- name: Check shells file
  shell: >
    /bin/cat /etc/shells | /usr/bin/grep "{{ shell_path.stdout }}"
  register: chk_shell
  ignore_errors: True

- name: Append shells
  lineinfile:
    dest: /etc/shells
    line: "{{ shell_path.stdout }}"
    regexp: "{{ shell_path.stdout }}"
    insertafter: EOF
  when: chk_shell.rc != 0
  become: true

- name: Change login shell
  shell: >
    /usr/bin/chpass -s "{{ shell_path.stdout }}"
  register: result
  until: result.rc == 0
