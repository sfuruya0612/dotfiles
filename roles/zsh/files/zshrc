#               _
#       _______| |__  _ __ ___
#      |_  / __| '_ \| '__/ __|
#     _ / /\__ \ | | | | | (__
#    (_)___|___/_| |_|_|  \___|
#
# Command alias
# list files
alias ls="gls --color=auto -F"
alias ll="ls -aFGl"
# history
alias history="history -iD"
# neovim
alias vim="`brew --prefix`/bin/nvim"
# view command
alias view="vim -R"
# change direcotry to git root direcotry
alias gcd='cd $(git rev-parse --show-toplevel)'
# git status
alias gs="git status -s"
# git diff
alias gd="git diff"
# gcloud command interactive
alias gcloud="gcloud alpha interactive"

# Functions and keybind
# fzf + history
fzf_history() {
  BUFFER=`history -n -r 1 | cut -d " " -f6- | fzf --query "$LBUFFER"`
  CURSOR=$#BUFFER
}
zle -N fzf_history
bindkey '^r' fzf_history

# fzf + export AWS_PROFILE
fa() {
    local awsProfile

    awsProfile=`grep "\[profile" ~/.aws/config | sed 's/^\[profile\ \(.*\)\]$/\1/g' | grep -v "#" | fzf`

    if [ "${awsProfile}" = "" ]; then
        return 1
    fi

    echo "Set environment variable AWS_PROFILE=${awsProfile}"
    tmux rename-window ${awsProfile}
    export AWS_PROFILE=${awsProfile}
}

# fzf + gcloud config set project <project>
fgcp() {
    local gcpProject

    gcpProject=$(gcloud projects list | fzf --header-lines=1 --query="$*" --select-1 -e | awk '{print $1}')

    if [ "${gcpProject}" = "" ]; then
        return 1
    fi

    echo "Set config project: ${gcpProject}"
    gcloud config set project ${gcpProject}
}

# fzf + ssh login
fs() {
    local sshLoginHost

    sshLoginHost=`grep -iE "^host" ~/.ssh/config | awk '{print $2}' | grep -v "#" | fzf`
    if [ "${sshLoginHost}" = "" ]; then
        return 1
    fi

    ssh ${sshLoginHost}
}

# fzf + git checkout <local branch>
fgb() {
    git checkout `git branch -a | tr -d " " | fzf --preview "git log --color=always {}" | head -n 1 | sed -e "s/^\*\s*//g" | perl -pe "s/remotes\/origin\///g"`
}

# fzf + git log --graph
fgl() {
    git log --graph --color=always --format="%C(auto)%h%d %s %C(black)%C(bold)%cr" "$@" | fzf --preview "echo {} | awk '{print \$2}' | xargs git show --color=always"
}

# fzf + git add
fga() {
    local selected

    selected=$(unbuffer git status -s | fzf --preview="echo {} | awk '{print \$2}' | xargs git diff --color" | awk '{print $2}')

    if [[ -n "${selected}" ]]; then
        selected=$(tr '\n' ' ' <<< "${selected}")
        git add `echo ${selected} | sed 's/\s*$//'`

        git status -s
    fi
}

# fzf + git checkout
fgc() {
    local selected

    selected=$(git status -s | grep "^\ M" | fzf --preview="echo {} | awk '{print \$2}' | xargs git diff --color" | awk '{print $2}')

    if [[ -n "${selected}" ]]; then
        selected=$(tr '\n' ' ' <<< "${selected}")
        git checkout `echo ${selected} | sed 's/\s*$//'`

        git status -s
    fi
}

# Google Search by Safari
google() {
    local str opt

    if [ $# != 0 ]; then
        for i in $*; do
            str="${str}${str:++}$i"
        done
        opt='search?num=100'
        opt="${opt}&q=${str}"
    fi

    open -a Safari.app https://www.google.co.jp/${opt}
}

# Ctrl+z foreground/background switch process
fancy-ctrl-z () {
  if [[ $#BUFFER -eq 0 ]]; then
    BUFFER="fg"
    zle accept-line
  else
    zle push-input
    zle clear-screen
  fi
}
zle -N fancy-ctrl-z
bindkey '^z' fancy-ctrl-z

# cdd change directory selected before paths
fzf-cdr() {
    target_dir=`cdr -l | sed 's/^[^ ][^ ]*  *//' | fzf`
    target_dir=`echo ${target_dir/\~/$HOME}`
    if [ -n "${target_dir}" ]; then
        cd ${target_dir}
    fi
}
alias cdd='fzf-cdr'

# Export path
# asdf path
source `brew --prefix asdf`/asdf.sh

# Go path
export GOPATH=${HOME}/go
export PATH=${PATH}:${GOPATH}/bin
