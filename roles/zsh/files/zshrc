#               _
#       _______| |__  _ __ ___
#      |_  / __| '_ \| '__/ __|
#     _ / /\__ \ | | | | | (__
#    (_)___|___/_| |_|_|  \___|
#

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ -f ~/.p10k.zsh ]] && source ~/.p10k.zsh

# history settings --------------------
# 履歴ファイルの保存先
export HISTFILE=${HOME}/.zhistory
# メモリに保存される履歴の件数
export HISTSIZE=1000
# 履歴ファイルに保存される履歴の件数
export SAVEHIST=100000
# 重複を記録しない
setopt hist_ignore_dups
# time format(開始、終了を記録)
setopt EXTENDED_HISTORY

# Command alias -----------------------
# list files
alias ls="gls --color=auto -F"
alias ll="ls -aFGl"
# history
alias history="history -iD"
# vim path intall from brew
alias vim="`brew --prefix`/bin/vim -p"
# ctags
alias tag="`brew --prefix`/bin/ctags"
# change direcotry to git root direcotry
alias gcd='cd $(git rev-parse --show-toplevel)'
# git status
alias gs='git status'

# fzf + history
fh() {
    local hist

    hist=`history -n -r 1 | sort | uniq -f4 | fzf --tac | cut -d " " -f6-`
    echo "$ ${hist}"
    eval ${hist}
}

# fzf + git branch(local) + git checkout <local branch>
fgb() {
    local branches branch

    branches=$(git branch -vv) &&
    branch=$(echo "${branches}" | fzf +m) &&
    git checkout $(echo "${branch}" | awk '{print $1}' | sed "s/.* //")
}

# fzf + git log --graph
fgl() {
    git log --graph --color=always \
        --format="%C(auto)%h%d %s %C(black)%C(bold)%cr" "$@" |
    fzf --ansi --no-sort --reverse --tiebreak=index --bind=ctrl-s:toggle-sort \
        --bind "ctrl-m:execute:
                (grep -o '[a-f0-9]\{7\}' | head -1 |
                xargs -I % sh -c 'git show --color=always % | less -R') << 'FZF-EOF'
                {}
                FZF-EOF"
}

# fzf + git add
fga() {
    local selected list

    selected=$(unbuffer git status -s | fzf -m --ansi --preview="echo {} | awk '{print \$2}' | xargs git diff --color" | awk '{print $2}')

    if [[ -n "${selected}" ]]; then
        selected=$(tr '\n' ' ' <<< "${selected}")
        git add `echo ${selected} | sed 's/\s*$//'`

        git status --short
    fi
}

# fzf + ssh login
fs() {
    local sshLoginHost

    sshLoginHost=`grep -iE "^host" ~/.ssh/config | awk '{print $2}' | fzf`

    if [ "${sshLoginHost}" = "" ]; then
        # ex) Ctrl-C.
        return 1
    fi

    ssh ${sshLoginHost}
}

# Google Search by Safari
google() {
    local str opt

    if [ $# != 0 ]; then
        for i in $*; do
            # $strが空じゃない場合、検索ワードを+記号でつなぐ(and検索)
            str="${str}${str:++}$i"
        done
        opt='search?num=100'
        opt="${opt}&q=${str}"
    fi

    open -a Safari.app https://www.google.co.jp/${opt}
}

# Path --------------------------------
# asdf path
export ASDF_ROOT=${HOME}/.asdf
export PATH=${ASDF_ROOT}/bin:${PATH}
source ${ASDF_ROOT}/asdf.sh
source ${ASDF_ROOT}/completions/asdf.bash

# Go path
export GOPATH=${HOME}/go
export PATH=${PATH}:${GOPATH}/bin

# AutoComplete ------------------------
# snatch
test -f ~/.zsh_autocomplete || curl -LRsS https://raw.githubusercontent.com/urfave/cli/master/autocomplete/zsh_autocomplete -o ~/.zsh_autocomplete
PROG=snatch source ~/.zsh_autocomplete
