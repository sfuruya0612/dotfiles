# python
[[plugins]]
repo = 'prabirshrestha/async.vim'
on_ft = ['python']

[[plugins]]
repo = 'vim-syntastic/syntastic'
on_ft = ['python']
hook_post_source = '''
    let g:syntastic_python_checkers = ["flake8"]
'''

# Golang
[[plugins]]
repo = 'fatih/vim-go'
on_ft = ['go']
hook_add = '''
    autocmd FileType go set autowrite

    let g:go_highlight_functions = 1
    let g:go_highlight_methods = 1
    let g:go_highlight_structs = 1
    let g:go_highlight_operators = 1
    let g:go_highlight_fields = 1
    let g:go_highlight_variable_declarations = 1
    let g:go_highlight_variable_assignments = 0
    let g:go_highlight_string_spellcheck = 1
    let g:go_highlight_types = 1
    let g:go_highlight_function_parameters = 1
    let g:go_highlight_extra_types = 1

    let g:go_list_type = "quickfix"

    let g:go_fmt_command = "goimports"

    let g:go_metalinter_autosave = 1
    let g:go_metalinter_autosave_enabled = ["golint"]

    let g:go_term_mode = "split"

    let g:go_addtags_transform = "camelcase"

    let g:go_auto_type_info = 1
    autocmd FileType go set updatetime=100

    let g:go_play_open_browser = 0

    let g:go_auto_sameids = 1
'''

[[plugins]]
repo = 'zchee/deoplete-go'
build = 'make'
on_ft = ['go']
depends = ['deoplete.nvim']
hook_source = '''
    let g:deoplete#sources#go#gocode_binary = $GOPATH . '/bin/gocode'
'''

# yaml
[[plugins]]
repo = 'stephpy/vim-yaml'
on_ft = ['yml', 'yaml']

# toml
[[plugins]]
repo = 'cespare/vim-toml'
on_ft = ['toml']

# javascript
[[plugins]]
repo = 'pangloss/vim-javascript'
on_ft = ['javascript']

[[plugins]]
repo = 'maxmellon/vim-jsx-pretty'
on_ft = ['javascript']

# typescript
[[plugins]]
repo = 'leafgarland/typescript-vim'
on_ft = ['typescript', 'typescriptreact']

# [[plugins]]
# repo = 'mhartington/nvim-typescript'
# build = './install.sh'
# on_ft = ['typescript', 'typescriptreact']
# hook_add = '''
#     let g:nvim_typescript#javascript_support = 1
#     let g:nvim_typescript#vue_support = 1

#     let g:nvim_typescript#diagnostics_enable = 1
#     autocmd BufWrite *.ts,*.tsx TSGetDiagnostics
# '''

# html
[[plugins]]
repo = 'othree/html5.vim'
on_ft = ['html']

# css
[[plugins]]
repo = 'hail2u/vim-css3-syntax'
on_ft = ['css']

# json
[[plugins]]
repo = 'elzr/vim-json'
on_ft = ['json']
hook_add = '''
    let g:vim_json_syntax_conceal = 0
'''

[[plugins]]
repo = 'rhysd/vim-fixjson'
on_ft = ['json']

# markdown
[[plugins]]
repo = 'rcmdnk/vim-markdown'
on_ft = ['markdown', 'md']
hook_add = '''
    let g:vim_markdown_folding_disabled = 1
    let g:vim_markdown_codeblock_syntax = 0
'''

# Preview markdown file with Google Chrome
[[plugins]]
repo = 'kannokanno/previm'
on_ft = ['markdown', 'md']
hook_add = '''
    autocmd BufRead,BufNewFile *.md set filetype=markdown
    let g:previm_open_cmd = 'open -a Google\ Chrome'
'''

# Erlang
[[plugins]]
repo = 'vim-erlang/vim-erlang-runtime'
on_ft = ['erlang']

[[plugins]]
repo = 'vim-erlang/vim-erlang-compiler'
on_ft = ['erlang']

[[plugins]]
repo = 'vim-erlang/vim-erlang-tags'
on_ft = ['erlang']

[[plugins]]
repo = 'vim-erlang/vim-erlang-omnicomplete'
on_ft = ['erlang']

# Elixir
[[plugins]]
repo = 'elixir-editors/vim-elixir'
on_ft = ['elixir']

# Rust
[[plugins]]
repo = 'rust-lang/rust.vim'
on_ft = ['rust']
hook_add = '''
    let g:rustfmt_autosave = 1
    let g:rust_clip_command = 'pbcopy'
'''

{% if VIM == "vim" %}
# Dockerfile
[[plugins]]
repo = 'ekalinin/Dockerfile.vim'
on_ft = ['dockerfile']

{% endif %}
