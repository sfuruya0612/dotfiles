# require
[[plugins]]
repo = 'Shougo/dein.vim'

# Icons
[[plugins]]
repo = 'lambdalisue/nerdfont.vim'

# Colorscheme
[[plugins]]
repo = 'haishanh/night-owl.vim'
hook_add = '''
    augroup TransparentBG
        autocmd!
        autocmd Colorscheme * highlight Normal ctermbg=none
        autocmd Colorscheme * highlight NonText ctermbg=none
        autocmd Colorscheme * highlight LineNr ctermbg=none
        autocmd Colorscheme * highlight Folded ctermbg=none
        autocmd Colorscheme * highlight EndOfBuffer ctermbg=none
    augroup END

    augroup transparent-windows
        autocmd!
        autocmd FileType denite set winblend=10
        autocmd FileType denite-filter set winblend=10
    augroup END
'''

# Statusline
[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
    function! AbsolutePath()
        let path = expand("%F")
        if path == ""
            return '[No Name]'
        elseif strlen(path) > 32
            return pathshorten(path)
        else
            return path
        endif
    endfunction

    function! LightlineTabFilename(n) abort
        let buflist = tabpagebuflist(a:n)
        let winnr = tabpagewinnr(a:n)
        let _ = pathshorten(expand('#'.buflist[winnr - 1].':f'))
        return _ !=# '' ? _ : '[No Name]'
    endfunction

    let g:lightline = {
    \    'colorscheme': 'nightowl',
    \    'active': {
    \        'left': [
    \            [ 'mode', 'paste' ],
    \            [ 'readonly', 'gitbranch', 'filename', 'modified' ]
    \        ],
    \        'right': [
    \            [ 'lineinfo' ],
    \            [ 'percent' ],
    \            [ 'fileformat', 'fileencoding', 'filetype' ]
    \        ]
    \    },
    \    'component_function': {
    \        'filename': 'AbsolutePath',
    \        'gitbranch': 'FugitiveHead'
    \    },
    \    'separator': {
    \        'left': "\ue0b0",
    \        'right': "\ue0b2"
    \    },
    \    'subseparator': {
    \        'left': "\ue0b1",
    \        'right': "\ue0b3"
    \    },
    \    'mode_map': {
    \        'n' : 'N',
    \        'i' : 'I',
    \        'R' : 'R',
    \        'v' : 'V',
    \        'V' : 'VL',
    \        "\<C-v>": 'VB',
    \        'c' : 'C',
    \        's' : 'S',
    \        'S' : 'SL',
    \        "\<C-s>": 'SB',
    \        't': 'T',
    \    },
    \    'tab': {
    \        'active': [ 'tabnum', 'filename', 'modified' ],
    \        'inactive': [ 'tabnum', 'filename', 'modified' ]
    \    },
    \    'tab_component_function': {
    \        'tabnum': 'lightline#tab#tabnum',
    \        'filename': 'LightlineTabFilename',
    \        'modified': 'lightline#tab#modified'
    \    },
    \    'tabline': {
    \        'left': [ [ 'tabs' ] ],
    \        'right': [ [ 'close' ] ]
    \    }
    \ }

'''

# Auto close parentheses
[[plugins]]
repo = 'cohama/lexima.vim'

# Coloring parentheses
[[plugins]]
repo = 'luochen1990/rainbow'
hook_add = '''
    let g:rainbow_active = 1
'''

# vim 非同期処理
[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

# LSP
[[plugins]]
repo = 'neoclide/coc.nvim'
rev = 'release'
on_i = 1
merged = '0'
hook_source = '''
    set hidden
    set nobackup
    set nowritebackup

    set cmdheight=2

    let g:coc_global_extensions = [
    \    'coc-lists',
    \    'coc-git',
    \    'coc-explorer',
    \    'coc-snippets',
    \    'coc-json',
    \    'coc-yaml',
    \    'coc-elixir',
    \    'coc-go',
    \    'coc-rls',
    \    'coc-docker',
    \    'coc-markdownlint',
    \    'coc-prettier',
    \ ]
'''

# fzf
[[plugins]]
repo = 'junegunn/fzf'
build = './install --all'
merged = 0

# fzf.vim
[[plugins]]
repo = 'junegunn/fzf.vim'
depends = ['fzf']
hook_add = '''
    command! -bang -nargs=* Rg
        \ call fzf#vim#grep
        \ 'rg --line-number --no-heading '.shellescape(<q-args>), 0,
        \ fzf#vim#with_preview({'options': '--exact --reverse'}, 'right:50%:wrap'))

    let g:fzf_action = {
    \   'ctrl-s': 'split',
    \   'ctrl-v': 'vsplit',
    \ }
'''

[[plugins]]
repo = 'tpope/vim-fugitive'

# 左端に git diff icon を表示
[[plugins]]
repo = 'airblade/vim-gitgutter'

# vim window resize
# usage: <C-x> start, h, j, k, l resize
[[plugins]]
repo = 'simeji/winresizer'
hook_add = '''
    let g:winresizer_start_key = '<C-x>'
'''

# vim indent
[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
    let g:indent_guides_enable_on_vim_startup = 1
    let g:indent_guides_exclude_filetypes = ['help', 'nerdtree', 'coc-explorer']
    let g:indent_guides_auto_colors = 0

    " autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd ctermbg=black
    " autocmd VimEnter,Colorscheme * :hi IndentGuidesEven ctermbg=17
'''

# Comment in/out
# Usage: Visual mode + gc
[[plugins]]
repo = 'tpope/vim-commentary'

{% if VIM == "vim" %}
# Use docker
# Not supported neovim
[[plugins]]
repo = 'skanehira/docker.vim'

{% endif %}
