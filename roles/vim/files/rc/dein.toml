# dein require
[[plugins]]
repo = 'Shougo/dein.vim'

# vim 非同期処理用
[[plugins]]
repo = 'Shougo/vimproc.vim'

# context カーソル位置のコンテキストのftを判定
[[plugins]]
repo = 'Shougo/context_filetype.vim'

# context カーソル位置のコンテキストに合わせてftを切り替える
[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']

# context color schema
[[plugins]]
repo = 'w0ng/vim-hybrid'
#hook_add = '''
#    set background=dark
#'''

# save vim session
[[plugins]]
repo = 'tpope/vim-obsession'

# Syntastic check
[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
    let b:ale_linters = {
    \    'javascript': ['eslint', 'eslint-plugin-vue'],
    \    'python': ['pyflakes'],
    \    'ruby': ['rubocop'],
    \    'markdown': ['textlint'],
    \    'go': ['golint'],
    \ }

    let g:ale_set_loclist = 0
    let g:ale_set_quickfix = 1
    let g:ale_sign_column_always = 1
'''

# Statusline design
[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
    function! AbsolutePath()
        let path = expand("%F")
        if path == ""
            return '[No Name]'
        elseif strlen(path) > 32
            return pathshorten(path)
        else
            return path
        endif
    endfunction

    let g:lightline = {
    \    'colorscheme': 'powerline',
    \    'active': {
    \        'left': [
    \            [ 'mode', 'paste' ],
    \            [ 'readonly', 'filename', 'modified' ],
    \            [ 'linter_checking', 'linter_errors', 'linter_warnings', 'linter_ok' ]
    \        ],
    \        'right': [
    \            [ 'lineinfo' ],
    \            [ 'percent' ],
    \            [ 'fileformat', 'fileencoding', 'filetype' ]
    \        ]
    \    },
    \    'component_function': {
    \        'filename': 'AbsolutePath'
    \    },
    \    'separator': {
    \        'left': "\ue0b0",
    \        'right': "\ue0b2"
    \    },
    \    'subseparator': {
    \        'left': "\ue0b1",
    \        'right': "\ue0b3"
    \    }
    \ }

    function! LightlineTabFilename(n) abort
        let buflist = tabpagebuflist(a:n)
        let winnr = tabpagewinnr(a:n)
        let _ = pathshorten(expand('#'.buflist[winnr - 1].':f'))
        return _ !=# '' ? _ : '[No Name]'
    endfunction

    let g:lightline.tab = {
    \    'active': [ 'tabnum', 'filename', 'modified' ],
    \    'inactive': [ 'tabnum', 'filename', 'modified' ]
    \ }

    let g:lightline.tab_component_function = {
    \    'tabnum': 'lightline#tab#tabnum',
    \    'filename': 'LightlineTabFilename',
    \    'modified': 'lightline#tab#modified'
    \ }

    let g:lightline.tabline = {
    \    'left': [ [ 'tabs' ] ],
    \    'right': [ [ 'close' ] ]
    \ }
'''

[[plugins]]
repo = 'maximbaz/lightline-ale'
depends = ['lightline.vim', 'ale']
hook_add = '''
    let g:lightline.component_expand = {
    \    'linter_checking': 'lightline#ale#checking',
    \    'linter_warnings': 'lightline#ale#warnings',
    \    'linter_errors': 'lightline#ale#errors',
    \    'linter_ok': 'lightline#ale#ok',
    \ }
    let g:lightline.component_type = {
    \    'linter_checking': 'left',
    \    'linter_warnings': 'warning',
    \    'linter_errors': 'error',
    \    'linter_ok': 'left',
    \ }
'''

# NERDTree
# Usage: C-n
[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
    let g:NERDTreeDirArrows = 1
    let g:NERDTreeDirArrowExpandable  = '→'
    let g:NERDTreeDirArrowCollapsible = '↓'
    let g:NERDTreeShowHidden = 1
    nnoremap <silent> <C-n> :NERDTreeToggle<CR>
'''

# NERDTree display git status
[[plugins]]
repo = 'Xuyuanp/nerdtree-git-plugin'

# 左端にgit diff iconを表示
[[plugins]]
repo = 'airblade/vim-gitgutter'

# vim window resize
# usage: <C-x> start, h, j, k, l resize
[[plugins]]
repo = 'simeji/winresizer'
hook_add = '''
    let g:winresizer_start_key = '<C-x>'
'''

# file selecter
# usage: <C-p>
[[plugins]]
repo = 'ctrlpvim/ctrlp.vim'

# if, funcのendを補完
[[plugins]]
repo = 'tpope/vim-endwise'

# Comment in/out
# Usage: Visual mode + gc
[[plugins]]
repo = 'tpope/vim-commentary'
