# 補完
[[plugins]]
repo = 'neoclide/coc.nvim'
rev = 'release'
on_i = 1
merged = '0'
hook_source = '''
  set hidden
  set nobackup
  set nowritebackup

  set cmdheight=2
  set statusline^=%{coc#status()}%{get(b:,'coc_current_function','')}

  let g:coc_global_extensions = [
      \ 'coc-lists',
      \ 'coc-status',
      \ 'coc-go',
      \ 'coc-json',
      \ 'coc-yaml',
      \ 'coc-python',
      \ 'coc-snippets',
      \ ]
'''

# snippet
[[plugins]]
repo = 'Shougo/neosnippet-snippets'

# snippet
[[plugins]]
repo = 'Shougo/neosnippet'
hook_source = '''
  imap <C-k> <Plug>(neosnippet_expand_or_jump)
  smap <C-k> <Plug>(neosnippet_expand_or_jump)
  xmap <C-k> <Plug>(neosnippet_expand_target)
  if has('conceal')
    set conceallevel=2 concealcursor=niv
  endif
'''
on_i = 1
on_ft = ['snippet']
depends = ['neosnippet-snippets']

# python
[[plugins]]
repo = 'davidhalter/jedi-vim'
on_ft = ['python']

[[plugins]]
repo = 'Vimjas/vim-python-pep8-indent'
on_ft = ['python']

[[plugins]]
repo = 'hdima/python-syntax'
on_ft = ['python']

# Golang
[[plugins]]
repo = 'fatih/vim-go'
on_ft = ['go']
hook_add = '''
    autocmd FileType go set autowrite
    let g:go_highlight_functions = 1
    let g:go_highlight_methods = 1
    let g:go_highlight_structs = 1
    let g:go_highlight_operators = 1
    let g:go_highlight_fields = 1
    let g:go_highlight_variable_declarations = 1
    let g:go_highlight_variable_assignments = 0
    let g:go_highlight_string_spellcheck = 1
    let g:go_highlight_types = 1
    let g:go_highlight_function_parameters = 1
    let g:go_highlight_extra_types = 1

    let g:go_list_type = "quickfix"

    " When Saving
    "" Auto go import
    let g:go_fmt_command = "goimports"

    "" Check go vet
    let g:go_metalinter_autosave = 1
    let g:go_metalinter_autosave_enabled = ['vet']

    " GoRun, GoTest window split
    let g:go_term_mode = 'split'

    " Jamp
    " let mapleader = "\<Space>"
    " au FileType go nmap <leader>s <Plug>(go-def-split)
    " au FileType go nmap <leader>v <Plug>(go-def-vertical)
'''

[[plugins]]
repo = 'zchee/deoplete-go'
build = 'make'
on_ft = ['go']
hook_source = '''
    let g:deoplete#sources#go#gocode_binary = $GOPATH . '/bin/gocode'
'''

# yaml
[[plugins]]
repo = 'chase/vim-ansible-yaml'
on_ft = ['yml', 'yaml']

# js
[[plugins]]
repo = 'othree/yajs.vim'
on_ft = ['javascript']

[[plugins]]
repo = 'maxmellon/vim-jsx-pretty'
on_ft = ['javascript']

[[plugins]]
repo = 'othree/javascript-libraries-syntax.vim'
on_ft = ['javascript']

# Vue.js
#[[plugins]]
#repo = 'posva/vim-vue'
#on_ft = ['vue']

# html
[[plugins]]
repo = 'othree/html5.vim'
on_ft = ['html']

# css
[[plugins]]
repo = 'hail2u/vim-css3-syntax'
on_ft = ['css']

#json
[[plugins]]
repo = 'elzr/vim-json'
on_ft = ['json']
hook_add = '''
    let g:vim_json_syntax_conceal = 0
'''

[[plugins]]
repo = 'rhysd/vim-fixjson'
on_ft = ['json']

# toml
[[plugins]]
repo = 'cespare/vim-toml'
on_ft = ['toml']

# markdown
[[plugins]]
repo = 'rcmdnk/vim-markdown'
on_ft = ['markdown', 'md']
hook_add = '''
    let g:vim_markdown_folding_disabled = 1
    let g:vim_markdown_codeblock_syntax = 0
'''

[[plugins]]
repo = 'kannokanno/previm'
on_ft = ['markdown', 'md']
hook_add = '''
   autocmd BufRead,BufNewFile *.md set filetype=markdown
   let g:previm_open_cmd = 'open -a Google\ Chrome'
'''
