#               _
#       _______| |__  _ __ ___
#      |_  / __| '_ \| '__/ __|
#     _ / /\__ \ | | | | | (__
#    (_)___|___/_| |_|_|  \___|
#

# Source Prezto -----------------------
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# history settings --------------------
# 履歴ファイルの保存先
export HISTFILE=${HOME}/.zhistory
# メモリに保存される履歴の件数
export HISTSIZE=1000
# 履歴ファイルに保存される履歴の件数
export SAVEHIST=100000
# 重複を記録しない
setopt hist_ignore_dups
# time format(開始、終了を記録)
setopt EXTENDED_HISTORY

# Command alias -----------------------
# list files
alias ls="gls --color=auto -F"
alias ll="ls -aFGl"
# history
alias history="history -iD"
# vim path intall from brew
alias vim="`brew --prefix`/bin/vim -p"
# get aws resource
alias show="python ~/tools/aws/cli_scripts/show_aws.py"
# ctags
alias tag="`brew --prefix`/bin/ctags"

# fzf + history
function fh() {
    hist=`history -n -r 1 | fzf --tac | cut -d " " -f6-`
    echo "$ ${hist}"
    eval ${hist}
}

# fzf + git branch(local) + git checkout <local branch>
fgb() {
    local branches branch
    branches=$(git branch -vv) &&
    branch=$(echo "$branches" | fzf +m) &&
    git checkout $(echo "$branch" | awk '{print $1}' | sed "s/.* //")
}

# fzf + git log --graph
fgl() {
    git log --graph --color=always \
        --format="%C(auto)%h%d %s %C(black)%C(bold)%cr" "$@" |
    fzf --ansi --no-sort --reverse --tiebreak=index --bind=ctrl-s:toggle-sort \
        --bind "ctrl-m:execute:
                (grep -o '[a-f0-9]\{7\}' | head -1 |
                xargs -I % sh -c 'git show --color=always % | less -R') << 'FZF-EOF'
                {}
FZF-EOF"
}

# Google Search by Safari
google() {
    local str opt
    if [ $# != 0 ]; then
        for i in $*; do
            # $strが空じゃない場合、検索ワードを+記号でつなぐ(and検索)
            str="$str${str:++}$i"
        done
        opt='search?num=100'
        opt="${opt}&q=${str}"
    fi
    open -a Safari.app https://www.google.co.jp/$opt
}

# Open CotEditor.app
memo() {
    local dir tmp
    dir=$HOME/tmp
    # ファイル名の重複を防ぐためUnix Timesrampをprefixとする
    tmp=tmp_$(date +%s).txt
    # $HOME配下にtemporary directoryがなければ作成
    if [ ! -d $dir ]; then
        mkdir -p $dir
    fi
    echo $@ >> $dir/$tmp
    # TextEditでも対応可
    open -a CotEditor.app $dir/$tmp
    # 一時ファイルとしてCotEditorにInputしているので削除
    rm $dir/$tmp
}

# Path --------------------------------
# asdf path
export ASDF_ROOT="$HOME/.asdf"
export PATH="$ASDF_ROOT/bin:$PATH"
source $ASDF_ROOT/asdf.sh
source $ASDF_ROOT/completions/asdf.bash

# Go workdir
export GOPATH="$HOME/go"
export PATH=$PATH:$GOPATH/bin
