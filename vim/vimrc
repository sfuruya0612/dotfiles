"           _
"    __   _(_)_ __ ___  _ __ ___
"    \ \ / / | '_ ` _ \| '__/ __|
"     \ V /| | | | | | | | | (__
"    (_)_/ |_|_| |_| |_|_|  \___|
"
if 1

" Encoding settings -------------------
set encoding=utf-8
set fileformats=unix,dos,mac
set fileencodings=utf-8,sjis
scriptencoding utf-8

" Setting the Color Scheme ------------
syntax on
colorscheme desert

" Setting the Status & Tab Line -------------
set laststatus=2
set noshowmode
set showtabline=2

" Tab & Indent Setting ----------------
set expandtab
set tabstop=4
set softtabstop=2
set autoindent
set smartindent
set shiftwidth=4

" Highlight & Search Settings ------------------
set showmatch
set cursorline
set hlsearch
    " ESCキー2度押しでハイライトの切り替え
    nnoremap <silent><Esc><Esc> :<C-u>set nohlsearch!<CR>
augroup HighlightTrailingSpaces
    autocmd!
    autocmd VimEnter,WinEnter,ColorScheme * highlight TrailingSpaces term=underline guibg=Red ctermbg=Red
    autocmd VimEnter,WinEnter * match TrailingSpaces /\s\+$/
augroup END
" 1文字入力毎に検索する
set incsearch
" 大文字小文字の区別なく検索する
set ignorecase

" ctags Settings ----------------------
set tags=.tags;$HOME

function! s:execute_ctags() abort
    " 探すタグファイル名
    let tag_name = '.tags'
    " ディレクトリを遡り、タグファイルを探し、パス取得
    let tags_path = findfile(tag_name, '.;')
    " タグファイルパスが見つからなかった場合
    if tags_path ==# ''
        return
    endif

    " タグファイルのディレクトリパスを取得
    " `:p:h`の部分は、:h filename-modifiersで確認
    let tags_dirpath = fnamemodify(tags_path, ':p:h')
    " 見つかったタグファイルのディレクトリに移動して、ctagsをバックグラウンド実行（エラー出力破棄）
    execute 'silent !cd' tags_dirpath '&& ctags -R -f' tag_name '2> /dev/null &'
endfunction

augroup ctags
    autocmd!
    autocmd BufWritePost * call s:execute_ctags()
augroup END

" General Settings --------------------
" 反映までの時間を変更(msec)
set updatetime=250
" 行番号の表示
set number
" ターミナル接続を高速にする
set ttyfast
" スワップファイルを作成しない
set noswapfile
" バックスペースキーの有効化
set backspace=indent,eol,start
" 括弧やfunctionで[%]ジャンプ
source $VIMRUNTIME/macros/matchit.vim
" カーソルの左右移動で行末から次の行の行頭への移動が可能になる
set whichwrap=b,s,h,l,<,>,[,],~
" 行が折り返し表示されていた場合、行単位ではなく表示行単位でカーソルを移動する
nnoremap j gj
nnoremap k gk
nnoremap <C-a> ^
nnoremap <C-e> $
" yank時にclipboardにもコピーする
set clipboard+=unnamed

" Start Dein Settings -----------------
if &compatible
    set nocompatible
endif

let s:dein_dir = $HOME . '/.vim/cache'
let s:dein_repo_dir = s:dein_dir . '/repos/github.com/Shougo/dein.vim'

if &runtimepath !~# '/dein.vim'
    if !isdirectory(s:dein_repo_dir)
        execute '!git clone https://github.com/Shougo/dein.vim' s:dein_repo_dir
    endif

	execute 'set runtimepath^=' . fnamemodify(s:dein_repo_dir, ':p')
endif

if dein#load_state(s:dein_dir)
    call dein#begin(s:dein_dir)

    let g:dein_plugin_dir = expand($HOME . '/dotfiles/vim/rc')
    call dein#load_toml(g:dein_plugin_dir . '/dein.toml', {'lazy': 0})
    call dein#load_toml(g:dein_plugin_dir . '/dein_lazy.toml', {'lazy': 1})

    call dein#end()
    call dein#save_state()
endif

filetype plugin indent on
syntax enable

if dein#check_install()
    call dein#install()
endif
" End Dein Settings --------------------

endif
